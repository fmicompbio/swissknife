name: R-CMD-check

on:
  push:
  pull_request:
    branches:
      - master

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          #- {os: windows-latest, r: '3.6'}
          #- {os: macOS-latest, r: '3.6'}
          #- {os: macOS-latest, r: '4.0', bioc: '3.12'}
          #- {os: macOS-latest, r: 'devel'}
          #- {os: ubuntu-16.04, r: '3.6', rspm: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
          #- {os: ubuntu-18.04, r: '4.0', bioc: '3.12', rspm: "https://packagemanager.rstudio.com/all/__linux__/bionic/latest"}
          #- {os: ubuntu-18.04, r: '4.0', bioc: '3.12'}
          - {os: ubuntu-latest, r: '4.1', bioc: '3.14', covr: 'yes', pkgdown: 'yes'}

    # change this env variable (v...) to manually bust the 
    # cache. Cache busting otherwise occurs with changes in
    # dependencies in the DESCRIPTION file. 
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.rspm }}
      cache-version: v1
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: checkout branch
        uses: actions/checkout@v2

      - name: setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          rtools-version: ${{ matrix.config.rtools }}

      - name: R version
        run: Rscript -e 'R.version'

      - name: setup Pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: Query dependencies
        run: |
          install.packages(c('remotes', 'BiocManager'), Ncpus = 2L)
          BiocManager::install(version = "${{ matrix.config.bioc }}", Ncpus = 2L, ask = FALSE)
          saveRDS(remotes::dev_package_deps(dependencies = TRUE, repos = c(getOption('repos'), BiocManager::repositories())), 'depends.Rds', version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ env.cache-version }}-${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('depends.Rds') }}
          restore-keys: ${{ env.cache-version }}-${{ runner.os }}-r-${{ matrix.config.r }}-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          sudo apt-get update && sudo apt-get -y install libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev libglpk40
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install R package dependencies
        run: |
          if (Sys.getenv("CRAN") != "") options(repos = c(REPO_NAME = Sys.getenv("CRAN")))
          local_deps <- remotes::local_package_deps(dependencies = TRUE)
          deps <- remotes::dev_package_deps(dependencies = TRUE, repos = c(getOption('repos'), BiocManager::repositories()))
          BiocManager::install(local_deps[local_deps %in% deps$package[deps$diff != 0]], Ncpu = 2L)
          remotes::install_cran('rcmdcheck', Ncpu = 2L)
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
          # manual checks
          #checkPkg <- function(...) swissknife:::.assertPackagesAvailable(...)
          # ... imports
          #checkPkg(c("BiocGenerics","BiocParallel","GenomeInfoDb","GenomicRanges","graphics","grDevices","IRanges","KernSmooth","matrixStats","methods","png","Rcpp","S4Vectors","stats","SummarizedExperiment","utils","XVector"))
          # ... suggests
          #checkPkg(c("Biostrings","BiocStyle","BSgenome","dplyr","GenomicAlignments","Gviz","knitr","QuasR","Rbowtie","rmarkdown","Rsamtools","rtracklayer","SingleCellExperiment","SingleR","testthat","tidyr","wordspace"))
        shell: Rscript {0}

      - name: Check
        env:
          R_CHECK_SUGGESTS_ONLY: true
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Test coverage
        if: matrix.config.covr == 'yes'
        run: |
          install.packages("covr")
          covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")
        shell: Rscript {0}

      - name: Deploy
        if: github.event_name == 'push' && github.ref == 'refs/heads/master' && matrix.config.pkgdown == 'yes'
        run: |
          git config --global user.name "mbstadler"
          R CMD INSTALL .
          Rscript -e "install.packages(c('remotes'), Ncpus = 2L)"
          Rscript -e "remotes::install_dev('pkgdown'); pkgdown::deploy_to_branch(new_process = FALSE)"


